# Paramètres
product.id = Identifiant du produit.
product.parameter = Produit à créer ou mettre à jour en base de données.

# GET /Produits
getallproducts.summary = Requête de récupération de tous les produits.
getallproducts.description = La méthode retourne tous les produits au format JSON, notamment leur id, nom et prix. \
  Le prix d'achat n'est pas remonté.
getallproducts.response200 = OK : un ou plusieurs produits ont été trouvés
getallproducts.response400 = Bad Request : erreur dans la requête envoyée
getallproducts.response404 = Not Found : aucun produit n'a pas été trouvé

# GET /Produits/id
getproduct.summary = Requête de récupération d'un produit.
getproduct.description = La méthode retourne le produit recherché au format JSON en spécifiant l'id, le nom et le prix du produit.
getproduct.response200 = OK : le produit a été trouvé
getproduct.response400 = Bad Request : erreur dans la requête envoyée
getproduct.response404 = Not Found : le produit n'a pas été trouvé

# POST /Produits
postproduct.summary = Requête de création d'un nouveau produit.
postproduct.description = La méthode crée le nouveau produit à l'aide des informations fournies au format JSON en paramètre de la requête. \
  Le JSON doit contenir toutes les informations nécéssaires à la création d'un produit : id, nom, prix et prix d'achat.
postproduct.response201 = Created : le produit a bien été créé
postproduct.response204 = No content : le produit a bien été créé ou mis à jour
postproduct.response400 = Bad Request : erreur dans la requête ou dans les paramètres envoyés

# PUT /Produits
putproduct.summary = Requête de mise à jour ou de création d'un nouveau produit.
putproduct.description = La méthode crée le nouveau produit s'il n'existe pas et met à jour le produit s'il existe déjà. \
  La création/mise à jour se fait à l'aide des informations fournies au format JSON en paramètre de la requête. \
  Le JSON doit contenir toutes les informations nécéssaires à la création d'un produit : id, nom, prix et prix d'achat.
putproduct.response201 = Created : Le produit a bien été créé
putproduct.response204 = No content : le produit a bien été mis à jour
putproduct.response400 = Bad Request : erreur dans la requête ou dans les paramètres envoyés

# DELETE /Produits/id
deleteproduct.summary = Requête de création d'un nouveau produit.
deleteproduct.description = La méthode crée le nouveau produit à l'aide des informations fournies au format JSON en paramètre de la requête. \
  Le JSON doit contenir toutes les informations nécéssaires à la création d'un produit : id, nom, prix et prix d'achat.
deleteproduct.response200 = OK : le produit a bien été supprimé
deleteproduct.response202 = Accepted : la demande est suppression a été correctement effectué, mais l'opération n'a pas été confirmée
deleteproduct.response204 = No content : la demande de suppression a été réalisée avec succès
deleteproduct.response400 = Bad Request : erreur dans la requête ou dans les paramètres envoyés

# GET /AdminProduits
getmarginproduct.summary = Requête de récupération de marges pour chaque produits.
getmarginproduct.description = La méthode récupère tous les produits de la base de données, calcule la différence entre le prix d'achat et le prix de vente \
  avant de retourner les informations du produit et la marge réalisée pour chacun d'entre eux.
getmarginproduct.response200 = OK : les produits et les marges ont été calculées et retournées
getmarginproduct.response404 = Not Found : aucun produit n'a été trouvé

# GET /TriProduits
triproductnom.summary = Requête de récupération des produits triés alphabétiquement.
triproductnom.description = La requête récupère tous les produits et renvoie les résultats triés dans l'ordre croissant. \
  Les produits retournés ne filtrent aucune informations, le prix d'achat est donc retourné.
triproductnom.response200 = OK : les produits triés ont bien été retournés
triproductnom.response404 = Not Found : aucun produit n'a été trouvé